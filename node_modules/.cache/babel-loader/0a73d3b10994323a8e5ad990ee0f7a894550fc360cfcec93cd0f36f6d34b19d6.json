{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sasaa\\\\WebstormProjects\\\\task_manager_react\\\\src\\\\pages\\\\RegisterPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegisterPage = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const history = useHistory();\n  const handleSubmit = e => {\n    e.preventDefault();\n    const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z]).{8,}$/;\n    if (!passwordRegex.test(password)) {\n      alert('Password must be at least 8 characters long and must contain both uppercase and lowercase characters.');\n      return;\n    }\n\n    // Here you would normally send this data to your backend for registration,\n    // but for simplicity, we'll just log it to the console and redirect to login page.\n\n    console.log('User registered:', {\n      username,\n      password\n    });\n    history.push('/login');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Password must be at least 8 characters long and must contain both uppercase and lowercase characters.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Username\",\n        value: username,\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_s(RegisterPage, \"tv8EzuaX//5WlTHeteRkd5b7x4w=\", false, function () {\n  return [useHistory];\n});\n_c = RegisterPage;\nexport default RegisterPage;\nvar _c;\n$RefreshReg$(_c, \"RegisterPage\");","map":{"version":3,"names":["React","useState","useHistory","jsxDEV","_jsxDEV","RegisterPage","_s","username","setUsername","password","setPassword","history","handleSubmit","e","preventDefault","passwordRegex","test","alert","console","log","push","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","_c","$RefreshReg$"],"sources":["C:/Users/sasaa/WebstormProjects/task_manager_react/src/pages/RegisterPage.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst RegisterPage: React.FC = () => {\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const history = useHistory();\r\n\r\n    const handleSubmit = (e: React.FormEvent) => {\r\n        e.preventDefault();\r\n        const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z]).{8,}$/;\r\n\r\n        if (!passwordRegex.test(password)) {\r\n            alert('Password must be at least 8 characters long and must contain both uppercase and lowercase characters.');\r\n            return;\r\n        }\r\n\r\n        // Here you would normally send this data to your backend for registration,\r\n        // but for simplicity, we'll just log it to the console and redirect to login page.\r\n\r\n        console.log('User registered:', { username, password });\r\n        history.push('/login');\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Register</h2>\r\n            <p>Password must be at least 8 characters long and must contain both uppercase and lowercase characters.</p>\r\n            <form onSubmit={handleSubmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Username\"\r\n                    value={username}\r\n                    onChange={(e) => setUsername(e.target.value)}\r\n                />\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n                <button type=\"submit\">Register</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RegisterPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,UAAU,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,YAAsB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMU,OAAO,GAAGT,UAAU,CAAC,CAAC;EAE5B,MAAMU,YAAY,GAAIC,CAAkB,IAAK;IACzCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMC,aAAa,GAAG,+BAA+B;IAErD,IAAI,CAACA,aAAa,CAACC,IAAI,CAACP,QAAQ,CAAC,EAAE;MAC/BQ,KAAK,CAAC,uGAAuG,CAAC;MAC9G;IACJ;;IAEA;IACA;;IAEAC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAE;MAAEZ,QAAQ;MAAEE;IAAS,CAAC,CAAC;IACvDE,OAAO,CAACS,IAAI,CAAC,QAAQ,CAAC;EAC1B,CAAC;EAED,oBACIhB,OAAA;IAAAiB,QAAA,gBACIjB,OAAA;MAAAiB,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjBrB,OAAA;MAAAiB,QAAA,EAAG;IAAqG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAC5GrB,OAAA;MAAMsB,QAAQ,EAAEd,YAAa;MAAAS,QAAA,gBACzBjB,OAAA;QACIuB,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,UAAU;QACtBC,KAAK,EAAEtB,QAAS;QAChBuB,QAAQ,EAAGjB,CAAC,IAAKL,WAAW,CAACK,CAAC,CAACkB,MAAM,CAACF,KAAK;MAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChD,CAAC,eACFrB,OAAA;QACIuB,IAAI,EAAC,UAAU;QACfC,WAAW,EAAC,UAAU;QACtBC,KAAK,EAAEpB,QAAS;QAChBqB,QAAQ,EAAGjB,CAAC,IAAKH,WAAW,CAACG,CAAC,CAACkB,MAAM,CAACF,KAAK;MAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChD,CAAC,eACFrB,OAAA;QAAQuB,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEd,CAAC;AAACnB,EAAA,CA3CID,YAAsB;EAAA,QAIRH,UAAU;AAAA;AAAA8B,EAAA,GAJxB3B,YAAsB;AA6C5B,eAAeA,YAAY;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}