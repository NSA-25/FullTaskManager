{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sasaa\\\\WebstormProjects\\\\task_manager_react\\\\src\\\\pages\\\\RegisterPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { auth } from '../firebase';\nimport { createUserWithEmailAndPassword } from 'firebase/auth';\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegisterPage = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const handleRegister = async e => {\n    e.preventDefault();\n    if (!password.match(/^(?=.*[a-z])(?=.*[A-Z]).{8,}$/)) {\n      alert('Password must be at least 8 characters long and contain both uppercase and lowercase characters.');\n      return;\n    }\n    try {\n      await createUserWithEmailAndPassword(auth, email, password);\n      alert(\"Account created successfully\");\n    } catch (error) {\n      if (error instanceof Error) {\n        alert(error.message);\n      } else {\n        alert('Unexpected error');\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleRegister,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Email:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Password must be at least 8 characters long and contain both uppercase and lowercase characters.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_s(RegisterPage, \"TSZhDBNy8CmbxXgprY/vvMmTG1Q=\");\n_c = RegisterPage;\nexport default RegisterPage;\nvar _c;\n$RefreshReg$(_c, \"RegisterPage\");","map":{"version":3,"names":["React","useState","auth","createUserWithEmailAndPassword","jsxDEV","_jsxDEV","RegisterPage","_s","email","setEmail","password","setPassword","handleRegister","e","preventDefault","match","alert","error","Error","message","onSubmit","children","type","value","onChange","target","required","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/sasaa/WebstormProjects/task_manager_react/src/pages/RegisterPage.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { auth } from '../firebase';\r\nimport { createUserWithEmailAndPassword } from 'firebase/auth';\r\nimport '../App.css';\r\n\r\nconst RegisterPage: React.FC = () => {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const handleRegister = async (e: React.FormEvent) => {\r\n        e.preventDefault();\r\n        if (!password.match(/^(?=.*[a-z])(?=.*[A-Z]).{8,}$/)) {\r\n            alert('Password must be at least 8 characters long and contain both uppercase and lowercase characters.');\r\n            return;\r\n        }\r\n        try {\r\n            await createUserWithEmailAndPassword(auth, email, password);\r\n            alert(\"Account created successfully\");\r\n        } catch (error) {\r\n            if (error instanceof Error) {\r\n                alert(error.message);\r\n            } else {\r\n                alert('Unexpected error');\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleRegister}>\r\n            <label>\r\n                Email:\r\n                <input type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} required />\r\n            </label>\r\n            <br />\r\n            <label>\r\n                Password:\r\n                <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} required />\r\n            </label>\r\n            <br />\r\n            <p>Password must be at least 8 characters long and contain both uppercase and lowercase characters.</p>\r\n            <button type=\"submit\">Register</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default RegisterPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,IAAI,QAAQ,aAAa;AAClC,SAASC,8BAA8B,QAAQ,eAAe;AAC9D,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpB,MAAMC,YAAsB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMW,cAAc,GAAG,MAAOC,CAAkB,IAAK;IACjDA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI,CAACJ,QAAQ,CAACK,KAAK,CAAC,+BAA+B,CAAC,EAAE;MAClDC,KAAK,CAAC,kGAAkG,CAAC;MACzG;IACJ;IACA,IAAI;MACA,MAAMb,8BAA8B,CAACD,IAAI,EAAEM,KAAK,EAAEE,QAAQ,CAAC;MAC3DM,KAAK,CAAC,8BAA8B,CAAC;IACzC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZ,IAAIA,KAAK,YAAYC,KAAK,EAAE;QACxBF,KAAK,CAACC,KAAK,CAACE,OAAO,CAAC;MACxB,CAAC,MAAM;QACHH,KAAK,CAAC,kBAAkB,CAAC;MAC7B;IACJ;EACJ,CAAC;EAED,oBACIX,OAAA;IAAMe,QAAQ,EAAER,cAAe;IAAAS,QAAA,gBAC3BhB,OAAA;MAAAgB,QAAA,GAAO,QAEH,eAAAhB,OAAA;QAAOiB,IAAI,EAAC,OAAO;QAACC,KAAK,EAAEf,KAAM;QAACgB,QAAQ,EAAGX,CAAC,IAAKJ,QAAQ,CAACI,CAAC,CAACY,MAAM,CAACF,KAAK,CAAE;QAACG,QAAQ;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrF,CAAC,eACRzB,OAAA;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACNzB,OAAA;MAAAgB,QAAA,GAAO,WAEH,eAAAhB,OAAA;QAAOiB,IAAI,EAAC,UAAU;QAACC,KAAK,EAAEb,QAAS;QAACc,QAAQ,EAAGX,CAAC,IAAKF,WAAW,CAACE,CAAC,CAACY,MAAM,CAACF,KAAK,CAAE;QAACG,QAAQ;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9F,CAAC,eACRzB,OAAA;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACNzB,OAAA;MAAAgB,QAAA,EAAG;IAAgG;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACvGzB,OAAA;MAAQiB,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAQ;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrC,CAAC;AAEf,CAAC;AAACvB,EAAA,CAtCID,YAAsB;AAAAyB,EAAA,GAAtBzB,YAAsB;AAwC5B,eAAeA,YAAY;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}